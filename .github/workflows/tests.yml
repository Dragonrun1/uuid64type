name: Run PHPSpec tests
on:
    push:
        branches:
            - main
        paths-ignore:
            - '**.md'
            - 'doc/**'
jobs:
    test:
        name: PHP ${{ matrix.php-versions }} Spec on ${{ matrix.operating-system }}
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                operating-system: [ubuntu-20.04, ubuntu-18.04, windows-latest, macos-latest]
                php-versions: ['8.0']
        env:
            extensions: mbstring, pdo, pdo_mysql, spl
            key: cache-v1
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup cache environment
              id: cache-env
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: ${{ env.extensions }}
                  key: ${{ env.key }}

            - name: Cache extensions
              uses: actions/cache@v2
              with:
                  path: ${{ steps.cache-env.outputs.dir }}
                  key: ${{ steps.cache-env.outputs.key }}
                  restore-keys: ${{ steps.cache-env.outputs.key }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: ${{ env.extensions }}

            - name: Testing PHP version
              run: |
                  php -v
                  php -r "if(strpos(phpversion(), '${{ matrix.php-versions }}') === false) {throw new Exception('Wrong PHP version Installed');}"

            - name: Testing Composer version
              run: |
                  composer -V
                  php -r "if(strpos(@exec('composer -V'), 'Composer version') === false) {throw new Exception('Composer not found');}"

            - name: Testing Extensions
              run: |
                  php -m
                  php -r "if(! extension_loaded('mbstring')) {throw new Exception('mbstring not found');}"
                  php -r "if(! extension_loaded('pdo')) {throw new Exception('pdo not found');}"
                  php -r "if(! extension_loaded('pdo_mysql')) {throw new Exception('pdo_mysql not found');}"
                  php -r "if(! extension_loaded('spl')) {throw new Exception('spl not found');}"

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Run PHPSpec
              run: php${{ matrix.php }} vendor/bin/phpspec run --ansi
    coverage:
        name: Code coverage
        needs: test
        runs-on: ubuntu-20.04
        env:
            extensions: mbstring, pdo, pdo_mysql, spl
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.0'
                  extensions: ${{ env.extensions }}

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: Create coverage directory
              run: mkdir -p coverage

            - name: PHPSpec clover run with phpdbg
              run: phpdbg -qrr vendor/phpspec/phpspec/bin/phpspec run --ansi --config phpspec_clover.yaml

            - name: Upload coverage results to Coveralls
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  composer global require --no-progress --no-suggest php-coveralls/php-coveralls
                  php-coveralls --coverage_clover=coverage/clover.xml -v

#            - name: Upload coverage to Scrutinizer
#              run: |
#                    wget -nv https://scrutinizer-ci.com/ocular.phar
#                    php ocular.phar code-coverage:upload --format=php-clover coverage/clover.xml
